package com.cube.fusion.android.activity.actions

import android.app.Activity
import android.content.Intent
import android.view.View
import com.cube.fusion.android.activity.WebViewActivity
import com.cube.fusion.android.core.actions.DefaultAndroidActionHandlers
import com.cube.fusion.android.core.actions.FusionAndroidActionHandler
import com.cube.fusion.android.core.actions.MutableListMultiActionHandler
import com.cube.fusion.android.core.utils.extensions.handledByView
import com.cube.fusion.core.model.action.LinkAction
import com.cube.fusion.core.model.action.PageAction

/**
 * [FusionAndroidActionHandler] implementation for the default handling of actions by redirects to activities
 * Also contains each of the individual default child handlers as static methods
 *
 * Created by JR Mitchell on 06/January/2022.
 * Copyright Â® 3SidedCube. All rights reserved.
 *
 * @param pageIntentGenerator a method to generate intents for [PageAction]s to redirect to
 */
class DefaultActivityActionHandlers(pageIntentGenerator: (View, PageAction) -> Intent?) : MutableListMultiActionHandler() {
	/**
	 * @param pageClass the activity class for [PageAction]s to redirect to
	 */
	constructor(pageClass: Class<out Activity>) : this({ view, _ -> Intent(view.context, pageClass) })

	companion object {

		/**
		 * Get a default handler for [PageAction]s that redirects based on the intent generated by [pageIntentGenerator] for each [PageAction], passing the page URL as an extra
		 * @param pageIntentGenerator a method to generate intents for [PageAction]s to redirect to
		 * @return a [FusionAndroidActionHandler] which redirects for any [PageAction]s based on the intent generated by [pageIntentGenerator]
		 */
		fun defaultPageActivityActionHandler(pageIntentGenerator: (View, PageAction) -> Intent?) = FusionAndroidActionHandler { view, action ->
			if (action is PageAction) {
				pageIntentGenerator(view, action).handledByView(view)
			}
			else false
		}

		/**
		 * Get a default handler for in-app [LinkAction]s; i.e ones with [LinkAction.inApp] true
		 * @return a [FusionAndroidActionHandler] that redirects [LinkAction]s to [WebViewActivity] if inApp
		 */
		fun defaultInAppLinkActivityActionHandler() = FusionAndroidActionHandler { view, action ->
			if (action is LinkAction && action.inApp) {
				WebViewActivity.getIntent(view.context, action.extractClick()).handledByView(view)
			}
			else false
		}
	}

	override val childHandlers = mutableListOf(
		defaultPageActivityActionHandler(pageIntentGenerator),
		defaultInAppLinkActivityActionHandler(),
		DefaultAndroidActionHandlers.defaultExternalLinkActivityActionHandler(),
		DefaultAndroidActionHandlers.defaultEmailActivityActionHandler()
	)
}